{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Michael.Fragiskatos\\\\desktop\\\\coding\\\\the-vinyl-life\\\\Screen\\\\RegisterScreen.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Loader from \"./Components/loader\";\n\nvar RegisterScreen = function RegisterScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userEmail = _useState4[0],\n      setUserEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userAge = _useState6[0],\n      setUserAge = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userAddress = _useState8[0],\n      setUserAddress = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errortext = _useState12[0],\n      setErrortext = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isRegistrationSuccess = _useState14[0],\n      setIsRegistrationSuccess = _useState14[1];\n\n  var handleSubmitButton = function handleSubmitButton() {\n    setErrortext(\"\");\n\n    if (!userName) {\n      alert(\"Please fill Name\");\n      return;\n    }\n\n    if (!userEmail) {\n      alert(\"Please fill Email\");\n      return;\n    }\n\n    if (!userAge) {\n      alert(\"Please fill Age\");\n      return;\n    }\n\n    if (!userAddress) {\n      alert(\"Please fill Address\");\n      return;\n    }\n\n    setLoading(true);\n    var dataToSend = {\n      user_name: userName,\n      user_email: userEmail,\n      user_age: userAge,\n      user_address: userAddress\n    };\n    var formBody = [];\n\n    for (var key in dataToSend) {\n      var encodedKey = encodeURIComponent(key);\n      var encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n\n    formBody = formBody.join(\"&\");\n    fetch(\"https://aboutreact.herokuapp.com/register.php\", {\n      method: \"POST\",\n      body: formBody,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setLoading(false);\n      console.log(responseJson);\n\n      if (responseJson.status == 1) {\n        setIsRegistrationSuccess(true);\n        console.log(\"Registration Successful. Please Login to proceed\");\n      } else {\n        setErrortext(\"Registration Unsuccessful\");\n      }\n    }).catch(function (error) {\n      setLoading(false);\n      console.error(error);\n    });\n  };\n\n  if (isRegistrationSuccess) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: \"#307ecc\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: {\n        height: 150,\n        resizeMode: \"contain\",\n        alignSelf: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.successTextStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Registration Successful.\"), React.createElement(TouchableOpacity, {\n      style: styles.buttonStyle,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return props.navigation.navigate(\"LoginScreen\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Login Now\")));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#307ecc\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, React.createElement(Loader, {\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: \"50%\",\n      height: 100,\n      resizeMode: \"contain\",\n      margin: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), React.createElement(KeyboardAvoidingView, {\n    enabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.SectionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserName) {\n      return setUserName(UserName);\n    },\n    underlineColorAndroid: \"#FFFFFF\",\n    placeholder: \"Enter Name\",\n    placeholderTextColor: \"#F6F6F7\",\n    autoCapitalize: \"sentences\",\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return _this._emailinput && _this._emailinput.focus();\n    },\n    blurOnSubmit: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserEmail) {\n      return setUserEmail(UserEmail);\n    },\n    underlineColorAndroid: \"#F6F6F7\",\n    placeholder: \"Enter Email\",\n    placeholderTextColor: \"#F6F6F7\",\n    keyboardType: \"email-address\",\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return _this._ageinput && _this._ageinput.focus();\n    },\n    blurOnSubmit: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserAge) {\n      return setUserAge(UserAge);\n    },\n    underlineColorAndroid: \"#F6F6F7\",\n    placeholder: \"Enter Age\",\n    placeholderTextColor: \"#F6F6F7\",\n    keyboardType: \"numeric\",\n    ref: function ref(_ref) {\n      _this._ageinput = _ref;\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      return _this._addressinput && _this._addressinput.focus();\n    },\n    blurOnSubmit: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserAddress) {\n      return setUserAddress(UserAddress);\n    },\n    underlineColorAndroid: \"#FFFFFF\",\n    placeholder: \"Enter Address\",\n    placeholderTextColor: \"#F6F6F7\",\n    autoCapitalize: \"sentences\",\n    ref: function ref(_ref2) {\n      _this._addressinput = _ref2;\n    },\n    returnKeyType: \"next\",\n    onSubmitEditing: Keyboard.dismiss,\n    blurOnSubmit: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  })), errortext != \"\" ? React.createElement(Text, {\n    style: styles.errorTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, \" \", errortext, \" \") : null, React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: handleSubmitButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, \"REGISTER\")))));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: \"row\",\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: \"#7DE24E\",\n    borderWidth: 0,\n    color: \"#FFFFFF\",\n    borderColor: \"#7DE24E\",\n    height: 40,\n    alignItems: \"center\",\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: \"#FFFFFF\",\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: \"white\",\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: \"white\"\n  },\n  errorTextStyle: {\n    color: \"red\",\n    textAlign: \"center\",\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: \"white\",\n    textAlign: \"center\",\n    fontSize: 18,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/Michael.Fragiskatos/desktop/coding/the-vinyl-life/Screen/RegisterScreen.js"],"names":["React","useState","Loader","RegisterScreen","props","userName","setUserName","userEmail","setUserEmail","userAge","setUserAge","userAddress","setUserAddress","loading","setLoading","errortext","setErrortext","isRegistrationSuccess","setIsRegistrationSuccess","handleSubmitButton","alert","dataToSend","user_name","user_email","user_age","user_address","formBody","key","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","body","headers","then","response","json","responseJson","console","log","status","catch","error","flex","backgroundColor","justifyContent","height","resizeMode","alignSelf","styles","successTextStyle","buttonStyle","navigation","navigate","buttonTextStyle","alignItems","width","margin","SectionStyle","inputStyle","UserName","_emailinput","focus","UserEmail","_ageinput","UserAge","ref","_addressinput","UserAddress","Keyboard","dismiss","errorTextStyle","StyleSheet","create","flexDirection","marginTop","marginLeft","marginRight","borderWidth","color","borderColor","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n//Import all required component\r\nimport {\r\n  StyleSheet,\r\n  TextInput,\r\n  View,\r\n  Text,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport Loader from \"./Components/loader\";\r\n\r\nconst RegisterScreen = (props) => {\r\n  let [userName, setUserName] = useState(\"\");\r\n  let [userEmail, setUserEmail] = useState(\"\");\r\n  let [userAge, setUserAge] = useState(\"\");\r\n  let [userAddress, setUserAddress] = useState(\"\");\r\n  let [loading, setLoading] = useState(false);\r\n  let [errortext, setErrortext] = useState(\"\");\r\n  let [isRegistrationSuccess, setIsRegistrationSuccess] = useState(false);\r\n\r\n  const handleSubmitButton = () => {\r\n    setErrortext(\"\");\r\n    if (!userName) {\r\n      alert(\"Please fill Name\");\r\n      return;\r\n    }\r\n    if (!userEmail) {\r\n      alert(\"Please fill Email\");\r\n      return;\r\n    }\r\n    if (!userAge) {\r\n      alert(\"Please fill Age\");\r\n      return;\r\n    }\r\n    if (!userAddress) {\r\n      alert(\"Please fill Address\");\r\n      return;\r\n    }\r\n    //Show Loader\r\n    setLoading(true);\r\n    var dataToSend = {\r\n      user_name: userName,\r\n      user_email: userEmail,\r\n      user_age: userAge,\r\n      user_address: userAddress,\r\n    };\r\n    var formBody = [];\r\n    for (var key in dataToSend) {\r\n      var encodedKey = encodeURIComponent(key);\r\n      var encodedValue = encodeURIComponent(dataToSend[key]);\r\n      formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    fetch(\"https://aboutreact.herokuapp.com/register.php\", {\r\n      method: \"POST\",\r\n      body: formBody,\r\n      headers: {\r\n        //Header Defination\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        //Hide Loader\r\n        setLoading(false);\r\n        console.log(responseJson);\r\n        // If server response message same as Data Matched\r\n        if (responseJson.status == 1) {\r\n          setIsRegistrationSuccess(true);\r\n          console.log(\"Registration Successful. Please Login to proceed\");\r\n        } else {\r\n          setErrortext(\"Registration Unsuccessful\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //Hide Loader\r\n        setLoading(false);\r\n        console.error(error);\r\n      });\r\n  };\r\n  if (isRegistrationSuccess) {\r\n    return (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: \"#307ecc\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Image\r\n          style={{ height: 150, resizeMode: \"contain\", alignSelf: \"center\" }}\r\n        />\r\n        <Text style={styles.successTextStyle}>Registration Successful.</Text>\r\n        <TouchableOpacity\r\n          style={styles.buttonStyle}\r\n          activeOpacity={0.5}\r\n          onPress={() => props.navigation.navigate(\"LoginScreen\")}\r\n        >\r\n          <Text style={styles.buttonTextStyle}>Login Now</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: \"#307ecc\" }}>\r\n      <Loader loading={loading} />\r\n      <ScrollView keyboardShouldPersistTaps=\"handled\">\r\n        <View style={{ alignItems: \"center\" }}>\r\n          <Image\r\n            // source={require(\"../Image/aboutreact.png\")}\r\n            style={{\r\n              width: \"50%\",\r\n              height: 100,\r\n              resizeMode: \"contain\",\r\n              margin: 30,\r\n            }}\r\n          />\r\n        </View>\r\n        <KeyboardAvoidingView enabled>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserName) => setUserName(UserName)}\r\n              underlineColorAndroid=\"#FFFFFF\"\r\n              placeholder=\"Enter Name\"\r\n              placeholderTextColor=\"#F6F6F7\"\r\n              autoCapitalize=\"sentences\"\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={() =>\r\n                this._emailinput && this._emailinput.focus()\r\n              }\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserEmail) => setUserEmail(UserEmail)}\r\n              underlineColorAndroid=\"#F6F6F7\"\r\n              placeholder=\"Enter Email\"\r\n              placeholderTextColor=\"#F6F6F7\"\r\n              keyboardType=\"email-address\"\r\n              //   ref={(ref) => {\r\n              //     this._emailinput = ref;\r\n              //   }}\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={() => this._ageinput && this._ageinput.focus()}\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserAge) => setUserAge(UserAge)}\r\n              underlineColorAndroid=\"#F6F6F7\"\r\n              placeholder=\"Enter Age\"\r\n              placeholderTextColor=\"#F6F6F7\"\r\n              keyboardType=\"numeric\"\r\n              ref={(ref) => {\r\n                this._ageinput = ref;\r\n              }}\r\n              onSubmitEditing={() =>\r\n                this._addressinput && this._addressinput.focus()\r\n              }\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserAddress) => setUserAddress(UserAddress)}\r\n              underlineColorAndroid=\"#FFFFFF\"\r\n              placeholder=\"Enter Address\"\r\n              placeholderTextColor=\"#F6F6F7\"\r\n              autoCapitalize=\"sentences\"\r\n              ref={(ref) => {\r\n                this._addressinput = ref;\r\n              }}\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={Keyboard.dismiss}\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          {errortext != \"\" ? (\r\n            <Text style={styles.errorTextStyle}> {errortext} </Text>\r\n          ) : null}\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            activeOpacity={0.5}\r\n            onPress={handleSubmitButton}\r\n          >\r\n            <Text style={styles.buttonTextStyle}>REGISTER</Text>\r\n          </TouchableOpacity>\r\n        </KeyboardAvoidingView>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\nexport default RegisterScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  SectionStyle: {\r\n    flexDirection: \"row\",\r\n    height: 40,\r\n    marginTop: 20,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    margin: 10,\r\n  },\r\n  buttonStyle: {\r\n    backgroundColor: \"#7DE24E\",\r\n    borderWidth: 0,\r\n    color: \"#FFFFFF\",\r\n    borderColor: \"#7DE24E\",\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    borderRadius: 30,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  buttonTextStyle: {\r\n    color: \"#FFFFFF\",\r\n    paddingVertical: 10,\r\n    fontSize: 16,\r\n  },\r\n  inputStyle: {\r\n    flex: 1,\r\n    color: \"white\",\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    borderColor: \"white\",\r\n  },\r\n  errorTextStyle: {\r\n    color: \"red\",\r\n    textAlign: \"center\",\r\n    fontSize: 14,\r\n  },\r\n  successTextStyle: {\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    fontSize: 18,\r\n    padding: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}