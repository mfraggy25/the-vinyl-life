{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael.Fragiskatos\\\\desktop\\\\coding\\\\the-vinyl-life\\\\Screen\\\\SplashScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar SplashScreen = function SplashScreen(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      animating = _useState2[0],\n      setAnimating = _useState2[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setAnimating(false);\n      AsyncStorage.getItem(\"user_id\").then(function (value) {\n        return props.navigation.navigate(value === null ? \"Auth\" : \"DrawerNavigationRoutes\");\n      });\n    }, 5000);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: \"90%\",\n      resizeMode: \"contain\",\n      margin: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), React.createElement(ActivityIndicator, {\n    animating: animating,\n    color: \"#FFFFFF\",\n    size: \"large\",\n    style: styles.activityIndicator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SplashScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#307ecc\"\n  },\n  activityIndicator: {\n    alignItems: \"center\",\n    height: 80\n  }\n});","map":{"version":3,"sources":["C:/Users/Michael.Fragiskatos/desktop/coding/the-vinyl-life/Screen/SplashScreen.js"],"names":["React","useState","useEffect","AsyncStorage","SplashScreen","props","animating","setAnimating","setTimeout","getItem","then","value","navigation","navigate","styles","container","width","resizeMode","margin","activityIndicator","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","height"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAIA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,kBAEEJ,QAAQ,CAAC,IAAD,CAFV;AAAA;AAAA,MAEzBK,SAFyB;AAAA,MAEdC,YAFc;;AAI9BL,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAIAJ,MAAAA,YAAY,CAACM,OAAb,CAAqB,SAArB,EAAgCC,IAAhC,CAAqC,UAACC,KAAD;AAAA,eACnCN,KAAK,CAACO,UAAN,CAAiBC,QAAjB,CACEF,KAAK,KAAK,IAAV,GAAiB,MAAjB,GAA0B,wBAD5B,CADmC;AAAA,OAArC;AAKD,KAVS,EAUP,IAVO,CAAV;AAWD,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,UAAU,EAAE,SAA5B;AAAuCC,MAAAA,MAAM,EAAE;AAA/C,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,iBAAD;AACE,IAAA,SAAS,EAAEZ,SADb;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEQ,MAAM,CAACK,iBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAcD,CAhCD;;AAiCA,eAAef,YAAf;AAEA,IAAMU,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BN,EAAAA,iBAAiB,EAAE;AACjBI,IAAAA,UAAU,EAAE,QADK;AAEjBG,IAAAA,MAAM,EAAE;AAFS;AAPY,CAAlB,CAAf","sourcesContent":["//Import React and Hooks we needed\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n//Import all required component\r\nimport { ActivityIndicator, View, StyleSheet, Image } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\nconst SplashScreen = (props) => {\r\n  //State for ActivityIndicator animation\r\n  let [animating, setAnimating] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setAnimating(false);\r\n      //Check if user_id is set or not\r\n      //If not then send for Authentication\r\n      //else send to Home Screen\r\n      AsyncStorage.getItem(\"user_id\").then((value) =>\r\n        props.navigation.navigate(\r\n          value === null ? \"Auth\" : \"DrawerNavigationRoutes\"\r\n        )\r\n      );\r\n    }, 5000);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        // source={require(\"../Image/aboutreact.png\")}\r\n        style={{ width: \"90%\", resizeMode: \"contain\", margin: 30 }}\r\n      />\r\n      <ActivityIndicator\r\n        animating={animating}\r\n        color=\"#FFFFFF\"\r\n        size=\"large\"\r\n        style={styles.activityIndicator}\r\n      />\r\n    </View>\r\n  );\r\n};\r\nexport default SplashScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#307ecc\",\r\n  },\r\n  activityIndicator: {\r\n    alignItems: \"center\",\r\n    height: 80,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}